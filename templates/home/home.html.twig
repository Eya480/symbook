{% extends 'base.html.twig' %}

{% block title %}Librairie Symbook | Le futur de la lecture
{% endblock %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('css/homeStyle.css') }}">
{% endblock %}
{% block nav %}
	<!-- Effets de particules -->
	<div class="particles" id="particles"></div>

	<!-- Header -->
	<header class="glass-card">
		<nav class="navbar">
			<a href="#" class="logo">Symbook</a>

			<div class="nav-links">
				<a href="{{ path('home') }}">
					<i class="fas fa-home me-1"></i>Accueil</a>
				<a href="{{ path('home_livre') }}">
					<i class="fas fa-book me-1"></i>Livres</a>
			</div>
			{% if is_granted('ROLE_USER')%}
				<div class="nav-links">
					<a href="{{ path('app_mes_commandes') }}">
						<i class="fas fa-list me-2"></i>Mes Commandes</a>
				</div>
			{% endif %}
			<div class="nav-actions">
				{% if app.user %}
					{# Affichage pour utilisateur connecté #}
					<div class="nav-links">
						<a href="{{ path('app_compte') }}">
							<i class="fas fa-user me-1"></i>Mon compte</a>
					</div>
					<div class="nav-links">
						<a href="{{ path('app_logout') }}">
							<i class="fas fa-sign-out-alt me-1"></i>Déconnexion</a>
					</div>
				{% else %}
					{# Affichage pour visiteur non connecté #}
					<div class="nav-links search-icon">
						<a href="{{ path('app_register') }}">
							<i class="fas fa-user-plus me-1"></i>Inscription</div>
						<div class="nav-links">
							<a href="{{ path('app_login') }}">
								<i class="fas fa-sign-in-alt me-1"></i>Connexion</a>
						</div>
					{% endif %}
					<a href="{{ path('app_panier') }}" class="position-relative text-decoration-none">
						<i class="fas fa-shopping-bag fs-4 text-white"></i>
						{% set panier = app.session.get('panier')|default([]) %}
						<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cart-counter" style="display: {{ panier|length > 0 ? 'flex' : 'none' }}">
							{{ panier|reduce((total, qty) => total + qty, 0) }}
						</span>
					</a>
				</div>
				<div class="search-container">
					<div class="search-icon" id="searchToggle">
						<i class="fas fa-search"></i>
					</div>
					<div class="search-box" id="searchBox">
						<form action="{{ path('home_livre') }}" method="get">
							<input type="text" name="q" placeholder="Rechercher un livre..." autocomplete="off">
							<button type="submit">
								<i class="fas fa-search"></i>
							</button>
						</form>
					</div>
				</div>
			</nav>
		</header>
	{% endblock %}
	{% block body %}
		<!-- Hero Section -->
		<section class="hero">
			<div class="hero-content">
				<h1>L'avenir de la
					<span class="gradient-text">lecture</span>
					est ici</h1>
				<p>Découvrez notre collection de livres en édition limitée avec réalité augmentée et expériences de lecture immersives.</p>
				<div class="btn-group">
					<a href="{{ path('home_livre') }}" class="btn btn-primary">
						Explorer maintenant
						<i class="fas fa-arrow-right"></i>
					</a>
				</div>
			</div>
			<div class="hero-image">
				<img src="https://images.unsplash.com/photo-1589998059171-988d887df646?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80" alt="Livre futuriste avec hologramme">
			</div>
		</section>

		<!-- Featured Books -->
		<section class="featured">
			<div class="section-header">
				<h2 class="section-title">Nouveautés
					<span class="gradient-text">exclusives</span>
				</h2>
				<a href="{{ path('home_livre') }}" class="view-all">
					Tout voir
					<i class="fas fa-arrow-right"></i>
				</a>
			</div>

			<div class="book-grid">
				{% for livre in livres|slice(0, 3) %}
					<div class="book-card">
						<div class="book-inner">
							<div class="book-cover">
								<img src="{{ asset('Uploads/images/' ~ livre.image) }}" alt="{{ livre.titre }}">
								<h3 class="book-title">{{ livre.titre }}</h3>
								<p class="book-author">{{ livre.editeur }}</p>
								<div class="book-price">
									<span class="price">{{ livre.prix }}DT</span>
									<button class="add-to-cart" data-id="{{ livre.id }}">Ajouter</button>
								</div>
							</div>
							<div class="book-back">
								<p class="book-description">{{ livre.resume|slice(0, 150) }}...</p>
								<div class="book-details">
									<span class="detail-item">
										<i class="fas fa-star"></i>
										1/5
									</span>
									<span class="detail-item">
										<i class="fas fa-tag"></i>
										{{ livre.categorie.libelle }}
									</span>
									<span class="detail-item">
										<i class="fas fa-tag"></i>
										{{ livre.dateEdition | date('d/m/Y') }}
									</span>
								</div>
							</div>
						</div>
					</div>
				{% endfor %}
			</div>
		</section>

		<section class="chatbot-info">
			<div class="container">
				<p>Parlez à notre assistant librairie ! Cliquez sur le bouton de chat en bas à droite pour commencer. Essayez de dire "hello", "livre [titre]" ou "catégorie [nom]" !</p>
			</div>
		</section>

		<script>
			// Effets de particules
const particlesContainer = document.getElementById('particles');
const particleCount = 30;

for (let i = 0; i < particleCount; i++) {
const particle = document.createElement('div');
particle.classList.add('particle');

const size = Math.random() * 4 + 2;
particle.style.width = `${size}px`;
particle.style.height = `${size}px`;

particle.style.left = `${
Math.random() * 100
}%`;
particle.style.bottom = `-${size}px`;

const duration = Math.random() * 20 + 10;
particle.style.animationDuration = `${duration}s`;

particle.style.animationDelay = `${
Math.random() * 20
}s`;

particlesContainer.appendChild(particle);
}

// Effet 3D sur les cartes de livre
const bookCards = document.querySelectorAll('.book-card');

bookCards.forEach(card => {
card.addEventListener('mousemove', (e) => {
const xAxis = (window.innerWidth / 2 - e.pageX) / 60;
const yAxis = (window.innerHeight / 2 - e.pageY) / 60;
card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
});

card.addEventListener('mouseenter', () => {
card.style.transition = 'none';
});

card.addEventListener('mouseleave', () => {
card.style.transition = 'transform 0.5s ease';
card.style.transform = 'rotateY(0deg) rotateX(0deg)';
});
});

// Gestion des ajouts au panier
document.querySelectorAll('.add-to-cart').forEach(btn => {
btn.addEventListener('click', async function (e) {
e.preventDefault();
const livreId = this.dataset.id;

try {
const response = await fetch (`/panier/ajouter/${livreId}`, {
method: 'POST',
headers: {
'X-Requested-With': 'XMLHttpRequest',
'Content-Type': 'application/json'
},
credentials: 'same-origin'
});

if (response.ok) {
const data = await response.json();
const counter = document.getElementById('cart-counter');

if (counter) {
counter.textContent = data.totalItems;
counter.style.display = 'flex';

counter.classList.add('pulse');
setTimeout(() => {
counter.classList.remove('pulse');
}, 500);
}

this.innerHTML = '<i class="fas fa-check"></i> Ajouté';
setTimeout(() => {
this.innerHTML = 'Ajouter';
}, 2000);
}
} catch (error) {
console.error('Erreur:', error);
}
});
});

var botmanWidget = {
frameEndpoint: '{{ path('app_chatframe') }}',
chatServer: '{{ path('app_botman') }}',
introMessage: 'Bonjour, je suis votre assistant librairie Symbook !',
title: 'Chatbot Symbook',
mainColor: '#456765',
bubbleBackground: '#ff76f4',
aboutText: 'Propulsé par BotMan'
};

document.addEventListener('DOMContentLoaded', function () {
console.log('Botman widget config:', botmanWidget);
console.log('frameEndpoint:', '{{ path('app_chatframe') }}');
console.log('chatServer:', '{{ path('app_botman') }}');
if (typeof BotManWidget === 'undefined') {
console.error('BotManWidget not loaded. Check CDN or network.');
} else {
console.log('BotManWidget loaded successfully.');
}
});

// Gestion de la recherche
const searchToggle = document.getElementById('searchToggle');
const searchBox = document.getElementById('searchBox');

searchToggle.addEventListener('click', function (e) {
e.stopPropagation();
searchBox.classList.toggle('active');

// Focus sur l'input quand la boîte s'ouvre
if (searchBox.classList.contains('active')) {
searchBox.querySelector('input').focus();
}
});

// Fermer la recherche quand on clique ailleurs
document.addEventListener('click', function (e) {
if (! searchBox.contains(e.target) && e.target !== searchToggle) {
searchBox.classList.remove('active');
}
});

// Empêcher la fermeture quand on clique dans la boîte
searchBox.addEventListener('click', function (e) {
e.stopPropagation();
});
		</script>
		<style>
			/* Style pour la barre de recherche */
			.search-container {
				position: relative;
				margin-left: 15px;
			}

			.search-icon {
				cursor: pointer;
				font-size: 1.2rem;
				color: white;
				transition: all 0.3s ease;
				padding: 8px;
			}

			.search-icon:hover {
				color: var(--primary-color);
				transform: scale(1.1);
			}

			.search-box {
				position: absolute;
				top: 50px;
				right: 0;
				width: 300px;
				background: rgba(255, 255, 255, 0.1);
				backdrop-filter: blur(10px);
				border-radius: 10px;
				padding: 15px;
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
				opacity: 0;
				visibility: hidden;
				transform: translateY(-20px);
				transition: all 0.3s ease;
				z-index: 1000;
			}

			.search-box.active {
				opacity: 1;
				visibility: visible;
				transform: translateY(0);
			}

			.search-box form {
				display: flex;
				align-items: center;
			}

			.search-box input {
				flex: 1;
				background: transparent;
				border: none;
				border-bottom: 1px solid rgba(255, 255, 255, 0.3);
				color: white;
				padding: 8px 0;
				margin-right: 10px;
				outline: none;
			}

			.search-box input::placeholder {
				color: rgba(255, 255, 255, 0.6);
			}

			.search-box button {
				background: none;
				border: none;
				color: white;
				cursor: pointer;
				font-size: 1rem;
				transition: all 0.3s ease;
			}

			.search-box button:hover {
				color: var(--primary-color);
				transform: scale(1.1);
			}
		</style>
		<script src="https://cdn.jsdelivr.net/npm/botman-web-widget@0/build/js/widget.js" onerror="console.error('Failed to load BotMan widget script')"></script>
	{% endblock %}
